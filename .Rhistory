summary(CPS)
CPS <- read.csv("CPSData.csv")
setwd("~/The Analytics Edge")
CPS <- read.csv("CPSData.csv")
summary(CPS)
str(CPS)
sort(table(CPS$Region))
sort(table(CPS$State))
sort(table(CPS$CountryOfBirthCode))
sort(table(CPS$Citizenship))
116639/(7073+7590+116639)
table(CPS$Citizenship)
table(CPS$Race)
table(CPS$Hispanic)
table(CPS$Hispanic(CPS$Race))
table(CPS$Hispanic)
table(CPS$Race)
table(CPS$Race, Hispanic=1)
table(CPS$Race)
table(CPS$Race(Hispanic=1))
table(CPS$Race, Hispanic=1)
str(CPS)
table(CPS$Race, CPS$Hispanic)
table(CPS, NA)
table(CPS$PeopleInHousehold)
table(CPS$Region)
summary(CPS)
table(CPS$Region, is.na(CPS$Married))
table(CPS$Sex, is.na(CPS$Married))
table(CPS$Age, is.na(CPS$Married))
table(CPS$Citizenship, is.na(CPS$Married))
As mentioned in the variable descriptions, MetroAreaCode is missing if an interviewee does not live in a metropolitan area. Using the same technique as in the previous question, answer the following questions about people who live in non-metropolitan areas.
table(CPS$State, is.na(CPS$MetroAreaCode))
table(CPS$Region, is.na(CPS$MetroAreaCode))
tapply(mean(CPS$Region, is.na(CPS$MetroAreaCode))
tapply(mean(CPS$Region, is.na(CPS$MetroAreaCode))
tapply(meanCPS$Region, is.na(CPS$MetroAreaCode))
tapply(CPS$Region, is.na(CPS$MetroAreaCode))
tapply(mean(CPS$Region, is.na(CPS$MetroAreaCode)))
tapply(mean(CPS$Region, is.na(CPS$MetroAreaCode))
tapply(mean(CPS$Region, is.na(CPS$MetroAreaCode))
tapply(CPS$Region, is.na(CPS$MetroAreaCode), mean)
tapply(CPS$State, is.na(CPS$MetroAreaCode), mean)
table(CPS$State, is.na(CPS$MetroAreaCode))
tapply(table(CPS$State, is.na(CPS$MetroAreaCode)), mean)
tapply(table(CPS$State, is.na(CPS$MetroAreaCode), mean))
tapply(table(CPS$State, is.na(CPS$MetroAreaCode), mean)
tapply(table(CPS$State, is.na(CPS$MetroAreaCode), mean)
tapply(table(CPS$State, is.na(CPS$MetroAreaCode))
tapply(table(CPS$State, is.na(CPS$MetroAreaCode))
tapply(table(CPS$State, is.na(CPS$MetroAreaCode)), mean)
tapply(CPS$State, is.na(CPS$MetroAreaCode)), mean)
tapply(is.na(CPS$MetroAreaCode)), CPS$State,mean)
tapply(is.na(CPS$MetroAreaCode)), CPS$State, mean)
tapply(is.na(CPS$MetroAreaCode), CPS$State, mean)
MetroAreaCode <- read.csv(MetroAreaCode.csv)
setwd("~/The Analytics Edge")
MetroAreaCode <- read.csv(MetroAreaCodes.csv)
CountryofBirthCode <- read.csv(CountryCodes.csv)
CountryofBirthMape <- read.csv(CountryCodes.csv)
MetroAreaMap <- read.csv(MetroAreaCodes.csv)
MetroAreaMap <- read.csv("MetroAreaCodes.csv")
CountryofBirthMape <- read.csv("CountryCodes.csv")
str(MetroAreaMap)
str(CountryofBirthMape)
CountryofBirthMap <- read.csv("CountryCodes.csv")
str(CountryofBirthMap)
CPS = merge(CPS, MetroAreaMap, by.x="MetroAreaCode", by.y="Code", all.x=TRUE)
str(CPS)
is.na(CPS$MetroArea)
CPS = merge(CPS, MetroAreaMap, by.x="MetroAreaCode", by.y="Code")
CPS
CPS = merge(CPS, MetroAreaMap, by.x="MetroAreaCode", by.y="Code", all.x=TRUE)
CPS
CPS = merge(CPS, MetroAreaMap, by.x="MetroAreaCode", by.y="Code", all.x=TRUE)
CPS = merge(CPS, MetroAreaMap, by.x="MetroAreaCode", by.y="Code", all.x=TRUE)
CPS = merge(CPS, MetroAreaMap, by.x="MetroAreaCode", by.y="Code", all.x=TRUE)
CPS = merge(CPS, MetroAreaMap, by.x="MetroAreaCode", by.y="Code", all.x=TRUE)
CPS = merge(CPS, MetroAreaMap, by.x="MetroAreaCode", by.y="Code", all.x=TRUE)
CPS = merge(CPS, MetroAreaMap, by.x="MetroAreaCode", by.y="Code", all.x=TRUE)
str(CPS)
CPS <- read.csv("CPSData.csv")
str(CPS)
131302-97064
CPS = merge(CPS, MetroAreaMap, by.x="MetroAreaCode", by.y="Code", all.x=TRUE)
CPS$MetroArea
table(CPS$MetroArea)
sort(table(CPS$MetroArea))
tapply(sort(CPS$MetroArea, CPS$Hispanic))
tapply(CPS$MetroArea, CPS$Hispanic)
sort(tapply(CPS$MetroArea, CPS$Hispanic))
sort(tapply(CPS$MetroArea, CPS$Hispanic), mean)
sort(tapply(CPS$MetroArea, CPS$Hispanic), mean)
(tapply(CPS$MetroArea, CPS$Hispanic), mean)
sort(tapply(CPS$Hispanic, CPS$MetroArea), mean)
sort(tapply(CPS$Hispanic, CPS$MetroArea), mean)
(tapply(CPS$Hispanic, CPS$MetroArea), mean)
tapply(CPS$Hispanic, CPS$MetroArea), mean)
tapply(CPS$Hispanic, CPS$MetroArea) mean)
tapply(CPS$Hispanic, CPS$MetroArea), mean)
tapply((CPS$Hispanic, CPS$MetroArea), mean)
tapply(CPS$Hispanic, CPS$MetroArea, mean)
sort(tapply(CPS$Hispanic, CPS$MetroArea, mean))
sort(tapply(CPS$Race == Asian, CPS$MetroArea, mean))
sort(tapply(CPS$Race == "Asian", CPS$MetroArea, mean))
sort(tapply(CPS$Education == "No high school diploma", CPS$MetroArea, mean))
sort(tapply(CPS$Education == "No high school diploma", CPS$MetroArea, mean, na.rm=TRUE))
-sort(tapply(CPS$Education == "No high school diploma", CPS$MetroArea, mean, na.rm=TRUE))
sort(tapply(CPS$Education == "No high school diploma", CPS$MetroArea, mean, na.rm=TRUE))
sort(tapply(CPS$Education == "No high school diploma", CPS$MetroArea, mean, na.rm=TRUE, decreasing = false))
sort(tapply(CPS$Education == "No high school diploma", CPS$MetroArea, mean, na.rm=TRUE, decreasing = TRUE))
rev(sort(tapply(CPS$Education == "No high school diploma", CPS$MetroArea, mean, na.rm=TRUE)))
CPS <- read.csv("CPSData.csv")
CountryofBirthMap <- read.csv("CountryCodes.csv")
str(CountryofBirthMap)
str(MetroAreaMap)
CPS = merge(CPS, CountryofBirthMap, by.x="Country", by.y="Code", all.x=TRUE)
CPS = merge(CPS, CountryofBirthMap, by.x="CountryCode", by.y="Code", all.x=TRUE)
CPS = merge(CPS, CountryofBirthMap, by.x="Country", by.y="Code", all.x=TRUE)
CPS = merge(CPS, CountryofBirthMap, by.x="CountryCodes", by.y="Code", all.x=TRUE)
CPS = merge(CPS, CountryofBirthMap, by.x="CountryCode", by.y="Code", all.x=TRUE)
CPS = merge(CPS, CountryofBirthMap, by.x="Country", by.y="Code", all.x=TRUE)
CPS = merge(CPS, MetroAreaMap, by.x="MetroAreaCode", by.y="Code", all.x=TRUE)
CPS <- read.csv("CPSData.csv")
str(CPS)
CPS = merge(CPS, CountryofBirthMap, by.x="CountryofBirthCode", by.y="Code", all.x=TRUE)
CPS = merge(CPS, CountryofBirthMap, by.x="CountryofBirthCode", by.y="Code", all.x=TRUE)
CPS = merge(CPS, MetroAreaMap, by.x="MetroAreaCode", by.y="Code", all.x=TRUE)
CPS = merge(CPS, CountryofBirthMap, by.x="CountryOfBirthCode", by.y="Code", all.x=TRUE)
str(CPS)
sort(tapply(CPS$Citizenship, CPS$Country, mean))
tapply(CPS$Citizenship, CPS$Country, mean)
sort(CPS$Country)
table(CPS$Country)
sort(table(CPS$Country))
sort(tapply(CPS$MetroArea == "New York-Northern New Jersey-Long Island, NY-NJ-PA", CPS$Country, mean, na.rm=TRUE))
sort(tapply(table(CPS$MetroArea == "New York-Northern New Jersey-Long Island, NY-NJ-PA", CPS$Country, mean, na.rm=TRUE))
sort(tapply(table(CPS$MetroArea == "New York-Northern New Jersey-Long Island, NY-NJ-PA", CPS$Country, mean, na.rm=TRUE))
sort(tapply(table(CPS$MetroArea == "New York-Northern New Jersey-Long Island, NY-NJ-PA", CPS$Country, mean, na.rm=TRUE)
sort(tapply(CPS$MetroArea == "New York-Northern New Jersey-Long Island, NY-NJ-PA", CPS$Country, mean, na.rm=TRUE)
sort(tapply(CPS$MetroArea == "New York-Northern New Jersey-Long Island, NY-NJ-PA", CPS$Country, mean, na.rm=TRUE))
sort(tapply(CPS$MetroArea == "New York-Northern New Jersey-Long Island, NY-NJ-PA", CPS$Country, mean, na.rm=TRUE))
sort(tapply(table(CPS$MetroArea == "New York-Northern New Jersey-Long Island, NY-NJ-PA", CPS$Country, mean, na.rm=TRUE))
sort(tapply(CPS$MetroArea == "New York-Northern New Jersey-Long Island, NY-NJ-PA", CPS$Country, mean, na.rm=TRUE)
sort(tapply(CPS$MetroArea == "New York-Northern New Jersey-Long Island, NY-NJ-PA", CPS$Country, mean, na.rm=TRUE)
sort(tapply(CPS$MetroArea == "New York-Northern New Jersey-Long Island, NY-NJ-PA", CPS$Country, mean, na.rm=TRUE))
sort(tapply(CPS$MetroArea == "New York-Northern New Jersey-Long Island, NY-NJ-PA", CPS$Country, mean, na.rm=TRUE))
table(CPS$MetroArea == "New York-Northern New Jersey-Long Island, NY-NJ-PA", CPS$Country, mean, na.rm=TRUE))
table(CPS$MetroArea == "New York-Northern New Jersey-Long Island, NY-NJ-PA", CPS$Country == "United States")
table(CPS$MetroArea == "New York-Northern New Jersey-Long Island, NY-NJ-PA", CPS$Country == "United States", na.rm=TRUE)
table(CPS$MetroArea == "New York-Northern New Jersey-Long Island, NY-NJ-PA", CPS$Country !== "United States")
table(CPS$MetroArea == "New York-Northern New Jersey-Long Island, NY-NJ-PA", CPS$Country != "United States")
1668/(1668+3736)= .309
sort(table(CPS$MetroArea, CPS$Country == Brazil, na.rm=TRUE))
sort(table(CPS$MetroArea, CPS$Country == India, na.rm=TRUE))
tail(sort(tapply(CPS$Country=="India", CPS$MetroArea, sum, na.rm=TRUE)))
tail(sort(tapply(CPS$Country=="Brazil", CPS$MetroArea, sum, na.rm=TRUE)))
tail(sort(tapply(CPS$Country=="Somalia", CPS$MetroArea, sum, na.rm=TRUE)))
